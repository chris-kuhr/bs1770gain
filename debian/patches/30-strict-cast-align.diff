Description: Enforce strict cast alignment check and fix build problems.

 When building with -Wstrict-align, the compiler warn about changing
 the alignment of some pointers on some architectures like mips.
 Because of this, upstream decided to remove -Wstrict-align from the
 default build.  I believe it should be kept, to discover new aligment
 problems introduced into the code in the future.

 This patch reintroduces it and fixes the know issues reported by the
 compiler today.

 The AVFrame.data char pointer is storing data believed to be properly
 aligned by the ffmpeg library, thus the warning can be ignored.  The

 The pull_cb_t and sox_reader_t pointers are believed to be OK, but
 this has not been verified.

 With the following patch, the code build on mips and the program is
 able to transcode a 16 bit wav file.

Author: Petter Reinholdtsen <pere@hungry.com>
Forwarded: no
Bug-Debian: https://bugs.debian.org/789250
Reviewed-By: Petter Reinholdtsen <pere@hungry.com>
Last-Update: 2015-06-24

--- a/libffsox-2/Makefile.in
+++ b/libffsox-2/Makefile.in
@@ -115,7 +115,7 @@ BS1770GAIN_TOOLS_UNINSTALL = @BS1770GAIN_TOOLS_UNINSTALL@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
 #CFLAGS+=-Wcast-align
-CFLAGS = @CFLAGS@ -Werror -Wall -Wformat -Wpointer-arith -Wcast-qual \
+CFLAGS = @CFLAGS@ -Werror -Wall -Wformat -Wpointer-arith -Wcast-qual -Wcast-align \
 	-Wreturn-type -Wextra -Wstrict-prototypes
 CPP = @CPP@
 #CFLAGS+=-Wmissing-declarations
--- bs1770gain-0.4.3.orig/libffsox-2/ffsox_frame_convert.c
+++ bs1770gain-0.4.3/libffsox-2/ffsox_frame_convert.c
@@ -140,10 +140,10 @@ static int convert_##r##i##_##w##i(conve
   R *rp; \
   W *wp,*mp; \
  \
-  rp=(R *)p->fr->frame->data[0]; \
+  rp=(R *)(void*)p->fr->frame->data[0]; \
   rp+=channels*p->fr->nb_samples.frame; \
  \
-  wp=(W *)p->fw->frame->data[0]; \
+  wp=(W *)(void*)p->fw->frame->data[0]; \
   wp+=channels*p->fw->nb_samples.frame; \
   mp=wp+channels*p->nb_samples; \
  \
@@ -281,11 +281,11 @@ static int convert_##r##p##_##w##i(conve
   W *wp,*mp; \
  \
   for (ch=0;ch<channels;++ch) { \
-    rp[ch]=(R *)p->fr->frame->data[ch]; \
+    rp[ch]=(R *)(void*)p->fr->frame->data[ch]; \
     rp[ch]+=p->fr->nb_samples.frame; \
   } \
  \
-  wp=(W *)p->fw->frame->data[0]; \
+  wp=(W *)(void*)p->fw->frame->data[0]; \
   wp+=channels*p->fw->nb_samples.frame; \
   mp=wp+channels*p->nb_samples; \
  \
--- bs1770gain-0.4.3.orig/libffsox-2/ffsox_frame_convert_sox.c
+++ bs1770gain-0.4.3/libffsox-2/ffsox_frame_convert_sox.c
@@ -98,10 +98,10 @@ static void convert_##sfx##i(convert_t *
  \
   (void)ch; \
  \
-  rp=(T *)p->fr->frame->data[0]; \
+  rp=(T *)(void*)p->fr->frame->data[0]; \
   rp+=channels*p->fr->nb_samples.frame; \
  \
-  wp=(sox_sample_t *)p->fw->frame->data[0]; \
+  wp=(sox_sample_t *)(void*)p->fw->frame->data[0]; \
   wp+=channels*p->fw->nb_samples.frame; \
   mp=wp+channels*p->nb_samples; \
  \
@@ -184,11 +184,11 @@ static void convert_##sfx##p(convert_t *
   SOX_SAMPLE_LOCALS; \
  \
   for (ch=0;ch<channels;++ch) { \
-    rp[ch]=(T *)p->fr->frame->data[ch]; \
+    rp[ch]=(T *)(void*)p->fr->frame->data[ch]; \
     rp[ch]+=p->fr->nb_samples.frame; \
   } \
  \
-  wp=(sox_sample_t *)p->fw->frame->data[0]; \
+  wp=(sox_sample_t *)(void*)p->fw->frame->data[0]; \
   wp+=channels*p->fw->nb_samples.frame; \
   mp=wp+channels*p->nb_samples; \
  \
--- bs1770gain-0.4.3.orig/libffsox-2/ffsox_sox_pull_handler.c
+++ bs1770gain-0.4.3/libffsox-2/ffsox_sox_pull_handler.c
@@ -32,7 +32,7 @@ static int getopts(sox_effect_t *e, int
 {
   priv_t *priv=e->priv;
 
-  priv->cb=1<argc?(pull_cb_t)argv[1]:NULL;
+  priv->cb=1<argc?(pull_cb_t)(void*)argv[1]:NULL;
   priv->data=2<argc?(void *)argv[2]:NULL;
 
   return SOX_SUCCESS;
--- bs1770gain-0.4.3.orig/libffsox-2/ffsox_sox_read_handler.c
+++ bs1770gain-0.4.3/libffsox-2/ffsox_sox_read_handler.c
@@ -36,7 +36,7 @@ static int getopts(sox_effect_t *e, int
     goto argc;
   }
 
-  priv->read=(sox_reader_t *)argv[1];
+  priv->read=(sox_reader_t *)(void*)argv[1];
 
   return SOX_SUCCESS;
 argc:
